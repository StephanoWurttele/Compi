Grammar

    0 $accept: command $end

    1 command: exp

    2 exp: NUMBER
    3    | exp '+' exp
    4    | exp '-' exp
    5    | exp '*' exp
    6    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
'*' (42) 5
'+' (43) 3
'-' (45) 4
error (256)
NUMBER (258) 2


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
command (10)
    on left: 1, on right: 0
exp (11)
    on left: 2 3 4 5 6, on right: 1 3 4 5 6


State 0

    0 $accept: . command $end

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    command  go to state 3
    exp      go to state 4


State 1

    2 exp: NUMBER .

    $default  reduce using rule 2 (exp)


State 2

    6 exp: '(' . exp ')'

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    exp  go to state 5


State 3

    0 $accept: command . $end

    $end  shift, and go to state 6


State 4

    1 command: exp .
    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp

    '*'  shift, and go to state 7
    '-'  shift, and go to state 8
    '+'  shift, and go to state 9

    $default  reduce using rule 1 (command)


State 5

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    6    | '(' exp . ')'

    '*'  shift, and go to state 7
    '-'  shift, and go to state 8
    '+'  shift, and go to state 9
    ')'  shift, and go to state 10


State 6

    0 $accept: command $end .

    $default  accept


State 7

    5 exp: exp '*' . exp

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    exp  go to state 11


State 8

    4 exp: exp '-' . exp

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    exp  go to state 12


State 9

    3 exp: exp '+' . exp

    NUMBER  shift, and go to state 1
    '('     shift, and go to state 2

    exp  go to state 13


State 10

    6 exp: '(' exp ')' .

    $default  reduce using rule 6 (exp)


State 11

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    5    | exp . '*' exp
    5    | exp '*' exp .

    '-'  shift, and go to state 8
    '+'  shift, and go to state 9

    $default  reduce using rule 5 (exp)


State 12

    3 exp: exp . '+' exp
    4    | exp . '-' exp
    4    | exp '-' exp .
    5    | exp . '*' exp

    $default  reduce using rule 4 (exp)


State 13

    3 exp: exp . '+' exp
    3    | exp '+' exp .
    4    | exp . '-' exp
    5    | exp . '*' exp

    $default  reduce using rule 3 (exp)
